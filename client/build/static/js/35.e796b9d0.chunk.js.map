{"version":3,"sources":["Demo/Dashboard/Coach.js"],"names":["Coach","Component","constructor","super","onChange","e","console","log","target","id","value","this","setState","onSubmit","preventDefault","newUser","name","state","email","password","contact","props","registerCoach","history","handleClick","_id","deleteId","coachid","window","confirm","deleteCoach","get_coach_view2_axios","password2","errors","componentDidMount","auth","isAuthenticated","push","componentWillReceiveProps","nextProps","render","coachlist","coach2","title","isOption","md","noValidate","Group","Label","error","type","className","classnames","invalid","placeholder","controlId","variant","style","color","responsive","hover","map","width","src","avatar2","alt","href","DEMO","BLANK_LINK","onClick","connect","withRouter"],"mappings":"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","file":"static/js/35.e796b9d0.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport {\r\n    Row, Col, Table, Tabs, Tab, Form,\r\n    Button,\r\n    FormControl\r\n} from 'react-bootstrap';\r\nimport Aux from \"../../hoc/_Aux\";\r\nimport Card from \"../../App/components/MainCard\";\r\nimport DEMO from \"../../store/constant\";\r\n\r\nimport avatar1 from '../../assets/images/user/avatar-1.jpg';\r\nimport avatar2 from '../../assets/images/user/avatar-2.jpg';\r\nimport avatar3 from '../../assets/images/user/avatar-3.jpg';\r\n\r\nimport { Link, withRouter } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { registerCoach, get_coach_view2_axios,deleteCoach } from \"../actions/coach2actions\";\r\nimport classnames from \"classnames\";\r\nclass Coach extends Component {\r\n\r\n    //States for coach form \r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            name: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            password2: \"\",\r\n            contact: \"\",\r\n            errors: {}\r\n        };\r\n    }\r\n    /* _isMounted = false; */\r\n    componentDidMount() {\r\n        /* this._isMounted = true; */\r\n       /*  console.log(\"On coach page this is state \" + this.props.auth.isAuthenticated); */\r\n\r\n        // If logged in and user navigates to Register page, should redirect them to dashboard\r\n        if (!this.props.auth.isAuthenticated) {\r\n            this.props.history.push(\"../auth/signin-1\");\r\n        }\r\n        // fire functon to get caoch list \r\n        this.props.get_coach_view2_axios();\r\n    }\r\n    /* componentWillUnmount() {\r\n        this._isMounted = false;\r\n      } */\r\n    componentWillReceiveProps(nextProps) {\r\n        console.log(nextProps);\r\n\r\n        if (nextProps.errors) {\r\n            this.setState({\r\n                errors: nextProps.errors\r\n            }, () => {\r\n                console.log(this.state.errors, 'dealersOverallTotal1')\r\n            });\r\n\r\n        }\r\n    }\r\n\r\n    onChange = e => {\r\n        console.log(\"targeting state \" + e.target.id + \" with value \" + e.target.value);\r\n\r\n        this.setState({ [e.target.id]: e.target.value });\r\n    };\r\n\r\n    onSubmit = e => {\r\n        e.preventDefault();\r\n        \r\n        const newUser = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            contact: this.state.contact\r\n\r\n        };\r\n\r\n        this.props.registerCoach(newUser, this.props.history);\r\n    };\r\n\r\n    handleClick = value => () => {\r\n        console.log(value._id);\r\n        \r\n        const deleteId = {\r\n            coachid: value._id,\r\n        };\r\n        if(window.confirm(\"Are you sure to delete this account ?\")){\r\n            this.props.deleteCoach(deleteId, this.props.history);\r\n            this.props.get_coach_view2_axios();\r\n        }\r\n        \r\n       \r\n      };\r\n    render() {\r\n        const { errors } = this.state;\r\n        const { coachlist } = this.props.coach2;\r\n        return (\r\n            <Aux>\r\n                <Row>\r\n                    <Col>\r\n                        <Card title='Registration form' isOption>\r\n                            <Col md={12}>\r\n                                <form noValidate onSubmit={this.onSubmit}>\r\n                                    <Row>\r\n                                    <Col md={4}>\r\n                                            <Form.Group >\r\n                                                <Form.Label>Email</Form.Label>\r\n                                                <input\r\n\r\n                                                    onChange={this.onChange}\r\n                                                    value={this.state.email}\r\n                                                    error={errors.email}\r\n                                                    id=\"email\"\r\n                                                    type=\"email\"\r\n                                                    className={classnames(\"form-control\", {\r\n                                                        invalid: errors.email\r\n                                                    })} placeholder=\"Email\" />\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                            <Form.Group >\r\n                                                <Form.Label>Contact</Form.Label>\r\n                                                <input\r\n\r\n                                                    onChange={this.onChange}\r\n                                                    value={this.state.contact}\r\n                                                    error={errors.contact}\r\n                                                    id=\"contact\"\r\n                                                    type=\"email\"\r\n                                                    className={classnames(\"form-control\", {\r\n                                                        invalid: errors.contact\r\n                                                    })} placeholder=\"Email\" />\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                            <Form.Group>\r\n                                                <Form.Label>Name</Form.Label>\r\n                                                <input onChange={this.onChange}\r\n                                                    value={this.state.name}\r\n                                                    error={errors.name}\r\n                                                    id=\"name\"\r\n                                                    type=\"text\"\r\n                                                    className={classnames(\"form-control\", {\r\n                                                        invalid: errors.name\r\n                                                    })}\r\n                                                    placeholder=\"Full Name\" />\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                        <Col md={4}>\r\n                                            <Form.Group controlId=\"formBasicPassword\">\r\n                                                <Form.Label>Password</Form.Label>\r\n                                                <input onChange={this.onChange}\r\n                                                    value={this.state.password}\r\n                                                    error={errors.password}\r\n                                                    id=\"password\"\r\n                                                    type=\"password\"\r\n                                                    className={classnames(\"form-control\", {\r\n                                                        invalid: errors.password\r\n                                                    })} placeholder=\"Password\" />\r\n                                            </Form.Group>\r\n                                        </Col>\r\n                                        <Col md={12}>\r\n                                            <Button variant=\"primary\" type=\"submit\">\r\n                                                Submit\r\n                                            </Button>\r\n                                        </Col>\r\n                                        <Col md={12}>\r\n                                            <span style={{ color: \"#cc0000\" }}> {this.state.errors.email ||this.state.errors.contact || this.state.errors.name || this.state.errors.password}</span>\r\n                                        </Col>\r\n                                    </Row>\r\n                                </form>\r\n                            </Col>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n                <Row>\r\n                    <Col>\r\n                        <Card title='Registered Coaches' isOption>\r\n                            <Table responsive hover>\r\n                                <tbody>\r\n\r\n                                    {coachlist.map(\r\n                                        ({ _id, name, contact }) =>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <img className=\"rounded-circle\" style={{ width: '40px' }} src={avatar2} alt=\"activity-user\" />\r\n                                                    {/* {_id} */}\r\n                                                </td>\r\n                                                <td>\r\n                                                    <h6 className=\"mb-1\">{name}</h6>\r\n                                                </td>\r\n                                                <td><i className=\"fa fa-circle text-c-green f-10 m-r-15\" />{contact}</td>\r\n                                                <td>\r\n                                                    {/* <a class=\"btn btn-small\"><i class=\"material-icons left\">edit</i>edit</a>\r\n                                                     <a class=\"btn btn-small red\"><i class=\"material-icons left\">delete</i>delete</a> */}\r\n                                                    <a href={DEMO.BLANK_LINK} className=\"label theme-bg text-white f-12\">Edit</a>\r\n                                                    <a  className=\"label theme-bg2 text-white f-12\" value={_id} onClick={this.handleClick({_id})}>Delete</a>\r\n                                                </td>\r\n\r\n                                            </tr>\r\n                                    )}\r\n\r\n                                </tbody>\r\n                            </Table>\r\n                        </Card>\r\n                    </Col>\r\n                </Row>\r\n            </Aux>\r\n        );\r\n    }\r\n}\r\n\r\nCoach.propTypes = {\r\n    registerCoach: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    coach2: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors,\r\n    coach2: state.coach2,\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { registerCoach, get_coach_view2_axios ,deleteCoach}\r\n)(withRouter(Coach));\r\n"],"sourceRoot":""}