{"version":3,"sources":["Demo/utils/setAuthToken.js","config.js","Demo/actions/authActions.js","App/layout/Loader/index.js","hoc/_Aux/index.js","store/actions.js","App/layout/ScrollToTop/index.js","route.js","App/index.js","serviceWorker.js","store/reducer.js","store/authReducer.js","store/errorReducer.js","store/coach2Reducer.js","store/branchReducer.js","store/index.js","store/store.js","index.js"],"names":["setAuthToken","token","axios","defaults","headers","common","defaultPath","basename","layout","preLayout","collapseMenu","layoutType","navIconColor","headerBackColor","navBackColor","navBrandColor","navBackImage","rtlLayout","navFixedLayout","headerFixedLayout","boxLayout","navDropdownIcon","navListIcon","navActiveListColor","navListTitleColor","navListTitleHide","configBlock","layout6Background","layout6BackSize","loginUser","userData","dispatch","console","log","post","then","res","data","localStorage","setItem","decoded","jwt_decode","setCurrentUser","catch","err","type","GET_ERRORS","payload","response","SET_CURRENT_USER","logoutUser","removeItem","branchfetcher","LOAD_ASSOC_BRANCHES","loader","className","Aux","props","children","COLLAPSE_MENU","COLLAPSE_TOGGLE","FULL_SCREEN","FULL_SCREEN_EXIT","CHANGE_LAYOUT","NAV_CONTENT_LEAVE","NAV_COLLAPSE_LEAVE","USER_LOADING","GET_SUCCESS","GET_COACH_VIEW2","LOAD_BRANCHES","LOAD_BATCHES","ScrollToTop","React","Component","componentDidUpdate","prevProps","this","location","window","scrollTo","render","withRouter","SignUp1","lazy","Signin1","BranchSelector","route","path","exact","name","component","AdminLayout","Loadable","loading","Loader","App","menu","routes","map","index","Route","key","fallback","Switch","Boolean","hostname","match","initialState","isOpen","isTrigger","config","isFullScreen","reducer","state","action","trigger","open","actionTypes","triggerIndex","indexOf","id","filter","item","isEmpty","require","isAuthenticated","user","selectedbranch","selectedbatch","assocbranch","authReducer","coachlist","branchlist","success","batchlist","rootReducer","combineReducers","auth","errors","coach2","branch","middleware","thunk","store","createStore","compose","applyMiddleware","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","getState","jwtToken","currentTime","Date","now","exp","href","app","BrowserRouter","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.921d56e5.chunk.js","sourcesContent":["import axios from \"axios\";\n\nconst setAuthToken = token => {\n  if (token) {\n    // Apply authorization token to every request if logged in\n    axios.defaults.headers.common[\"Authorization\"] = token;\n  } else {\n    // Delete auth header\n    delete axios.defaults.headers.common[\"Authorization\"];\n  }\n};\n\nexport default setAuthToken;\n","export default {\r\n    defaultPath: '/dashboard/default',\r\n    basename: '/datta-able/react/default', // only at build time to set, like /datta-able\r\n    layout: 'vertical', // vertical, horizontal (not available in lite version)\r\n    preLayout: null, // (not available in lite version)\r\n    collapseMenu: false, // mini-menu\r\n    layoutType: 'menu-light', // menu-dark, (menu-light, dark are not available in lite version)\r\n    navIconColor: false,\r\n    headerBackColor: 'header-default', // header-default, (header-blue, header-red, header-purple, header-lightblue, header-dark are not available in lite version)\r\n    navBackColor: 'navbar-default', // navbar-default, (navbar-blue, navbar-red, navbar-purple, navbar-lightblue, navbar-dark are not available in lite version)\r\n    navBrandColor: 'brand-default', // brand-default, (brand-blue, brand-red, brand-purple, brand-lightblue, brand-dark are not available in lite version)\r\n    navBackImage: false, // not available in lite version\r\n    rtlLayout: false, // not available in lite version\r\n    navFixedLayout: true,\r\n    headerFixedLayout: false, // not available in lite version\r\n    boxLayout: false,\r\n    navDropdownIcon: 'style1', // style1, (style2, style3 are not available in lite version)\r\n    navListIcon: 'style1', // style1, (style2, style3, style4, style5, style6 are not available in lite version)\r\n    navActiveListColor: 'active-default', // active-default, (active-blue, active-red, active-purple, active-lightblue, active-dark are not available in lite version)\r\n    navListTitleColor: 'title-default', // title-default, (title-blue, title-red, title-purple, title-lightblue, title-dark are not available in lite version)\r\n    navListTitleHide: false, // not available in lite version\r\n    configBlock: false, // not available in lite version\r\n    layout6Background : 'linear-gradient(to right, #A445B2 0%, #D41872 52%, #FF0066 100%)', // used only for pre-layout = layout-6\r\n    layout6BackSize : '', // used only for pre-layout = layout-6\r\n};\r\n","import axios from \"axios\";\nimport setAuthToken from \"../utils/setAuthToken\";\nimport jwt_decode from \"jwt-decode\";\n\nimport { GET_ERRORS, SET_CURRENT_USER, USER_LOADING , LOAD_ASSOC_BRANCHES } from \"../../store/actions\";\n\n// Register User\nexport const registerUser = (userData, history) => dispatch => {\n \n  axios\n    .post(\"/api/users/register\", userData)\n    .then(res => history.push(\"/login\"))\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      }) \n    );\n};\n\n// Login - get user token\nexport const loginUser = userData => dispatch => {\n  console.log(\"login fired\");\n  \n  axios\n    .post(\"/api/users/login\", userData)\n    .then(res => {\n      // Save to localStorage\n      console.log(res);\n      // Set token to localStorage\n      const { token } = res.data;\n      localStorage.setItem(\"jwtToken\", token);\n      // Set token to Auth header\n      setAuthToken(token);\n      // Decode token to get user data\n      const decoded = jwt_decode(token);\n      // Set current user\n      dispatch(setCurrentUser(decoded));\n    })\n    .catch(err =>\n      dispatch({\n        type: GET_ERRORS,\n        payload: err.response.data\n      })\n    );\n};\n\n// Set logged in user\nexport const setCurrentUser = decoded => {\n  return {\n    type: SET_CURRENT_USER,\n    payload: decoded\n  };\n};\n\n// User loading\nexport const setUserLoading = () => {\n  return {\n    type: USER_LOADING\n  };\n};\n\n// Log user out\nexport const logoutUser = () => dispatch => {\n  console.log(\"logging out with action\")\n  // Remove token from local storage\n  localStorage.removeItem(\"jwtToken\");\n  // Remove auth header for future requests\n  setAuthToken(false);\n  // Set current user to empty object {} which will set isAuthenticated to false\n  dispatch(setCurrentUser({}));\n};\n\nexport const branchfetcher = (userData) => dispatch =>{\n \n  axios\n  .post(\"/api/branch/branchfetcher\" , userData)\n  .then(res=>dispatch({\n      type : LOAD_ASSOC_BRANCHES,\n      payload :res.data\n  }))\n}\n","import React from 'react';\r\n\r\nconst loader = () => {\r\n    return (\r\n        <div className=\"loader-bg\">\r\n            <div className=\"loader-track\">\r\n                <div className=\"loader-fill\"/>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default loader;","const Aux = (props) => props.children;\r\n\r\nexport default Aux;","export const COLLAPSE_MENU = 'COLLAPSE_MENU';\r\nexport const COLLAPSE_TOGGLE = 'COLLAPSE_TOGGLE';\r\nexport const FULL_SCREEN = 'FULL_SCREEN';\r\nexport const FULL_SCREEN_EXIT = 'FULL_SCREEN_EXIT';\r\nexport const CHANGE_LAYOUT = 'CHANGE_LAYOUT';\r\nexport const NAV_CONTENT_LEAVE = 'NAV_CONTENT_LEAVE';\r\n\r\nexport const NAV_COLLAPSE_LEAVE = 'NAV_COLLAPSE_LEAVE';\r\nexport const SET_CURRENT_USER = 'SET_CURRENT_USER';\r\nexport const USER_LOADING = 'USER_LOADING';\r\nexport const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_SUCCESS = \"GET_SUCCESS\";\r\nexport const GET_COACH_VIEW = \"GET_COACH_VIEW\";\r\nexport const GET_COACH_VIEW2 = \"GET_COACH_VIEW2\";\r\nexport const LOAD_ASSOC_BRANCHES = \"LOAD_ASSOC_BRANCHES\";\r\n\r\nexport const LOAD_BRANCHES = \"LOAD_BRANCHES\";\r\nexport const LOAD_BATCHES = \"LOAD_BATCHES\";\r\n","import React from 'react';\r\nimport { withRouter } from 'react-router';\r\n\r\nclass ScrollToTop extends React.Component {\r\n    componentDidUpdate(prevProps) {\r\n        if (this.props.location !== prevProps.location) {\r\n            window.scrollTo(0, 0)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default withRouter(ScrollToTop);","import React from 'react';\r\n\r\nconst SignUp1 = React.lazy(() => import('./Demo/Authentication/SignUp/SignUp1'));\r\nconst Signin1 = React.lazy(() => import('./Demo/Authentication/SignIn/SignIn1'));\r\nconst BranchSelector = React.lazy(() => import('./Demo/Authentication/SignIn/BranchSelector'));\r\n\r\nconst BranchSelect = React.lazy(() => import('./Demo/Dashboard/SignUp1'));\r\nconst route = [\r\n    { path: '/auth/signup-1', exact: true, name: 'Signup 1', component: SignUp1 },\r\n    { path: '/dashboard/branchselect', exact: true, name: 'Branch Select', component: BranchSelect },\r\n    { path: '/auth/signin-1', exact: true, name: 'Signin 1', component: Signin1 },\r\n    { path: '/auth/branchselector', exact: true, name: 'BranchSelector', component: BranchSelector }\r\n];\r\n\r\nexport default route;","import React, { Component, Suspense } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport Loadable from 'react-loadable';\n\nimport '../../node_modules/font-awesome/scss/font-awesome.scss';\n\nimport Loader from './layout/Loader'\nimport Aux from \"../hoc/_Aux\";\nimport ScrollToTop from './layout/ScrollToTop';\nimport routes from \"../route\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"../Demo/utils/setAuthToken\";\n\n\n/* import { setCurrentUser, logoutUser } from \"../Demo/actions/authActions\";\nimport { Provider } from \"react-redux\";\nimport store from \"../Demo/store\";\n */\nconst AdminLayout = Loadable({\n    loader: () => import('./layout/AdminLayout'),\n    loading: Loader\n});\n\nclass App extends Component {\n    render() {\n          \n                 \n        const menu = routes.map((route, index) => {\n            \n            console.log(\"A\");\n          return (route.component) ? (\n           \n              <Route\n                  key={index}\n                  path={route.path}\n                  exact={route.exact}\n                  name={route.name}\n                  render={props => (\n                      <route.component {...props} />\n                  )} />\n                  ) : (null);\n        });\n         \n                \n\n        return (\n          \n            <Aux>\n                <ScrollToTop>\n                    <Suspense fallback={<Loader/>}>\n                        <Switch>\n                            {menu}\n                            <Route path=\"/\" component={AdminLayout} />\n                        </Switch>\n                    </Suspense>\n                </ScrollToTop>\n            </Aux>\n           \n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||  \n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as actionTypes from './actions';\r\nimport config from './../config';\r\n\r\nconst initialState = {\r\n    isOpen: [], //for active default menu\r\n    isTrigger: [], //for active default menu, set blank for horizontal\r\n    ...config,\r\n    isFullScreen: false, // static can't change\r\n};\r\n\r\nconst reducer = (state = initialState, action) => {\r\n    let trigger = [];\r\n    let open = [];\r\n\r\n    switch (action.type) {\r\n        case actionTypes.COLLAPSE_MENU:\r\n            return {\r\n                ...state,\r\n                collapseMenu: !state.collapseMenu\r\n            };\r\n        case actionTypes.COLLAPSE_TOGGLE:\r\n            if (action.menu.type === 'sub') {\r\n                open = state.isOpen;\r\n                trigger = state.isTrigger;\r\n\r\n                const triggerIndex = trigger.indexOf(action.menu.id);\r\n                if (triggerIndex > -1) {\r\n                    open = open.filter(item => item !== action.menu.id);\r\n                    trigger = trigger.filter(item => item !== action.menu.id);\r\n                }\r\n\r\n                if (triggerIndex === -1) {\r\n                    open = [...open, action.menu.id];\r\n                    trigger = [...trigger, action.menu.id];\r\n                }\r\n            } else {\r\n                open = state.isOpen;\r\n                const triggerIndex = (state.isTrigger).indexOf(action.menu.id);\r\n                trigger = (triggerIndex === -1) ? [action.menu.id] : [];\r\n                open = (triggerIndex === -1) ? [action.menu.id] : [];\r\n            }\r\n\r\n            return {\r\n                ...state,\r\n                isOpen: open,\r\n                isTrigger: trigger\r\n            };\r\n        case actionTypes.NAV_CONTENT_LEAVE:\r\n            return {\r\n                ...state,\r\n                isOpen: open,\r\n                isTrigger: trigger,\r\n            };\r\n        case actionTypes.NAV_COLLAPSE_LEAVE:\r\n            if (action.menu.type === 'sub') {\r\n                open = state.isOpen;\r\n                trigger = state.isTrigger;\r\n\r\n                const triggerIndex = trigger.indexOf(action.menu.id);\r\n                if (triggerIndex > -1) {\r\n                    open = open.filter(item => item !== action.menu.id);\r\n                    trigger = trigger.filter(item => item !== action.menu.id);\r\n                }\r\n                return {\r\n                    ...state,\r\n                    isOpen: open,\r\n                    isTrigger: trigger,\r\n                };\r\n            }\r\n            return {...state};\r\n        case actionTypes.FULL_SCREEN :\r\n            return {\r\n                ...state,\r\n                isFullScreen: !state.isFullScreen\r\n            };\r\n        case actionTypes.FULL_SCREEN_EXIT:\r\n            return {\r\n                ...state,\r\n                isFullScreen: false\r\n            };\r\n        case actionTypes.CHANGE_LAYOUT:\r\n            return {\r\n                ...state,\r\n                layout: action.layout\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport default reducer;","import { SET_CURRENT_USER, USER_LOADING , LOAD_ASSOC_BRANCHES} from \"./actions\";\r\n\r\nconst isEmpty = require(\"is-empty\");\r\nconst initialState = {\r\n  isAuthenticated: false,\r\n  user: {},\r\n  loading: false,\r\n  selectedbranch : \"\",\r\n  selectedbatch : \"\",\r\n  assocbranch : {}\r\n};\r\nconst  authReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case SET_CURRENT_USER:\r\n      return {\r\n        ...state,\r\n        isAuthenticated: !isEmpty(action.payload),\r\n        user: action.payload \r\n      };\r\n      case LOAD_ASSOC_BRANCHES:\r\n      return {\r\n        ...state,\r\n        assocbranch: action.payload \r\n      };\r\n    case USER_LOADING:\r\n      return {\r\n        ...state,\r\n        loading: true\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nexport default authReducer;","import { GET_ERRORS } from  \"./actions\";\nconst initialState = {};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case GET_ERRORS:\n      return action.payload;\n    default:\n      return state;\n  }\n}\n","import { GET_COACH_VIEW2 } from \"./actions\";\r\nconst initialState = {\r\n    coachlist:[]\r\n  };\r\n\r\n\r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case GET_COACH_VIEW2:\r\n        return {\r\n          ...state,\r\n          coachlist : action.payload\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }","import { LOAD_BRANCHES, USER_LOADING, GET_SUCCESS,LOAD_BATCHES } from \"./actions\";\r\n\r\nconst isEmpty = require(\"is-empty\");\r\nconst initialState = {\r\n  branchlist: [],\r\n  success: \"Data saved !\",\r\n  batchlist: []\r\n};\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOAD_BRANCHES:\r\n      return {\r\n        ...state,\r\n        branchlist: action.payload,\r\n\r\n      };\r\n    case LOAD_BATCHES:\r\n      return {\r\n        ...state,\r\n        batchlist: action.payload,\r\n\r\n      };\r\n    case GET_SUCCESS:\r\n      return {\r\n        ...state,\r\n        success: \"ARE WE SUCCESSFUL ?\",\r\n\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport authReducer from \"./authReducer\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport coach2Reducer from \"./coach2Reducer\";\r\nimport branchReducer from \"./branchReducer\";\r\nimport reducer from \"./reducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n  \r\n  reducer :reducer,\r\n  auth: authReducer,\r\n  errors: errorReducer,\r\n  coach2 : coach2Reducer,\r\n  branch : branchReducer,\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../store/index\";\r\n\r\nconst initialState = { };\r\n\r\nconst middleware = [thunk];\r\n\r\nconst store = createStore(\r\n  rootReducer,\r\n  initialState,\r\n  compose(\r\n    applyMiddleware(...middleware),\r\n    (window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ &&\r\n      window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__()) ||\r\n      compose\r\n  )\r\n);\r\nconsole.log(store.getState());\r\nexport default store;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore } from 'redux';\nimport {Provider} from 'react-redux';\nimport {BrowserRouter} from 'react-router-dom';\n\nimport App from './App/index';\nimport * as serviceWorker from './serviceWorker';\nimport reducer from './store/reducer';\nimport authReducer from './store/authReducer';\nimport config from './config';\nimport store from './store/store';\n\n//cusome code akash\nimport jwt_decode from \"jwt-decode\";\nimport setAuthToken from \"./Demo/utils/setAuthToken\";\nimport { setCurrentUser, logoutUser } from \"./Demo/actions/authActions\";\n\n\n// Check for token to keep user logged in\nif (localStorage.jwtToken) {\n    // Set auth token header auth\n    const token = localStorage.jwtToken;\n    setAuthToken(token);\n    // Decode token and get user info and exp\n    const decoded = jwt_decode(token);\n    // Set user and isAuthenticated\n    store.dispatch(setCurrentUser(decoded));\n    // Check for expired token\n    const currentTime = Date.now() / 1000; // to get in milliseconds\n    if (decoded.exp < currentTime) {\n      // Logout user\n      store.dispatch(logoutUser());\n  \n      // Redirect to login\n      window.location.href = \"./login\";\n    }\n  }\n  const storeb = createStore(reducer);\n  const storeauth = createStore(authReducer);\nconst app = (\n    <Provider store={store}>\n    {/* <Provider store={storeauth}>\n    <Provider store={storeb}> */}\n        <BrowserRouter basename={config.basename}>\n            {/* basename=\"/datta-able\" */}\n            <App />\n        </BrowserRouter>\n    </Provider>\n   /*  </Provider>\n    </Provider> */\n);\n\nReactDOM.render(app, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}